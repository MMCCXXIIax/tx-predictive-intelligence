# ============================================
# TX BACKEND - FULL SOURCE BUILD DOCKERFILE
# No pre-built wheels, complete from source
# ============================================

FROM python:3.11-slim

WORKDIR /app

# ============================================
# INSTALL ALL BUILD DEPENDENCIES
# ============================================
RUN apt-get update && apt-get install -y \
    # Compilers
    gcc \
    g++ \
    gfortran \
    # Build tools
    make \
    cmake \
    git \
    wget \
    curl \
    # Python dev headers
    python3-dev \
    # Linear algebra libraries (for NumPy, SciPy)
    libblas-dev \
    liblapack-dev \
    libatlas-base-dev \
    # OpenMP for parallel processing
    libgomp1 \
    # SSL/TLS
    libssl-dev \
    libffi-dev \
    # Compression
    zlib1g-dev \
    libbz2-dev \
    liblzma-dev \
    # PostgreSQL client libraries
    libpq-dev \
    # Additional utilities
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# ============================================
# UPGRADE PIP AND BUILD TOOLS
# ============================================
RUN pip install --no-cache-dir --upgrade \
    pip \
    setuptools \
    wheel \
    cython

# ============================================
# COPY REQUIREMENTS
# ============================================
COPY requirements.txt .

# ============================================
# BUILD FROM SOURCE - LAYER BY LAYER
# This ensures proper build order and caching
# ============================================

# Layer 1: Core numerical libraries (build from source)
RUN pip install --no-cache-dir \
    numpy>=1.24.0

# Layer 2: Scientific computing (depends on numpy)
RUN pip install --no-cache-dir \
    scipy>=1.16.2 \
    pandas>=2.0.0

# Layer 3: Machine Learning (build from source)
RUN pip install --no-cache-dir \
    scikit-learn>=1.3.0 \
    joblib>=1.4.0 \
    imbalanced-learn>=0.11.0

# Layer 4: PyTorch (FROM SOURCE - this is the big one!)
# This will take 20-30 minutes but gives you FULL capabilities
RUN pip install --no-cache-dir \
    torch>=2.0.0 \
    --no-binary torch

# Layer 5: Flask and web framework
RUN pip install --no-cache-dir \
    Flask==3.0.0 \
    flask-cors==4.0.0 \
    flask-socketio==5.3.0 \
    flask-limiter==3.5.0 \
    werkzeug>=3.0.0

# Layer 6: Gunicorn and WSGI
RUN pip install --no-cache-dir \
    gunicorn==21.2.0 \
    gevent \
    gevent-websocket \
    waitress==3.0.0

# Layer 7: Database
RUN pip install --no-cache-dir \
    SQLAlchemy>=2.0.23 \
    psycopg>=3.2.2 \
    psycopg[binary]>=3.2.2 \
    alembic>=1.13.0

# Layer 8: WebSocket
RUN pip install --no-cache-dir \
    python-socketio==5.8.0 \
    python-engineio==4.7.0 \
    websocket-client==1.6.0 \
    websocket>=0.2.1 \
    simple-websocket

# Layer 9: External APIs and data sources
RUN pip install --no-cache-dir \
    requests>=2.32.0 \
    httpx>=0.27.0 \
    supabase>=2.0.0 \
    yfinance>=0.2.0 \
    ccxt>=4.4.86

# Layer 10: Technical analysis
RUN pip install --no-cache-dir \
    ta>=0.11.0 \
    textblob>=0.19.0

# Layer 11: Utilities
RUN pip install --no-cache-dir \
    python-dotenv==1.0.0 \
    prometheus-client>=0.20.0 \
    python-json-logger>=2.0.7 \
    pydantic>=2.7.0 \
    PyJWT>=2.8.0

# Layer 12: Testing and monitoring
RUN pip install --no-cache-dir \
    pytest>=8.0.0 \
    pytest-cov>=4.1.0 \
    sentry-sdk[flask]>=1.40.0

# Layer 13: Background tasks
RUN pip install --no-cache-dir \
    redis>=5.0.0 \
    celery>=5.3.0

# Layer 14: System utilities
RUN pip install --no-cache-dir \
    psutil>=5.9.0 \
    tzdata>=2024.1

# ============================================
# COPY APPLICATION CODE
# ============================================
COPY . .

# ============================================
# CREATE NECESSARY DIRECTORIES
# ============================================
RUN mkdir -p /app/logs /app/data /app/models

# ============================================
# SET ENVIRONMENT VARIABLES
# ============================================
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PATH=/root/.local/bin:$PATH

# ============================================
# EXPOSE PORT
# ============================================
EXPOSE 5000

# ============================================
# HEALTH CHECK
# ============================================
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:5000/health', timeout=5)"

# ============================================
# RUN APPLICATION
# ============================================
CMD ["gunicorn", \
     "-k", "geventwebsocket.gunicorn.workers.GeventWebSocketWorker", \
     "-w", "1", \
     "-b", "0.0.0.0:5000", \
     "--timeout", "120", \
     "--log-level", "info", \
     "--access-logfile", "-", \
     "--error-logfile", "-", \
     "main:app"]
